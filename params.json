{"name":"Biblesearch-api-js","tagline":"Use the ABS api from javascript.  This is built for phonegap/cordova use, but can be added in a regular web ap.","body":"# biblesearch-api-js\r\n\r\nThe American Bible Society has produced this javascript library to ease the use of the Bible Search api (http://bibles.org/pages/api) in web/cordova/phonegap applications.  The api (and this library) allow you to easily:\r\n\r\n* search the Bible\r\n* locate specific passages\r\n* get information about specific books, chapters, and verses\r\n* do all that in one or more versions\r\n* store nothing locally\r\n\r\nIn addition ABS manages the version copyright requirements and keeping the textual data up to date with latest changes by the copyright owners/publishers.  Use of this library and the api is free to the public for non-commercial use.  See http://bibles.org/pages/api for additional information.\r\n\r\n## Installation\r\n\r\nTo install this plugin in a cordova/phonegap app, follow the [Command-line Interface Guide](http://cordova.apache.org/docs/en/edge/guide_cli_index.md.html#The%20Command-line%20Interface).\r\n\r\n    cordova plugin add https://github.com/americanbible/biblesearch-api-js.git\r\n\r\nIf you are not using the Cordova Command-line Interface, follow [Using Plugman to Manage Plugins](http://cordova.apache.org/docs/en/edge/guide_plugin_ref_plugman.md.html).\r\n\r\n    plugman --platform ios --project platforms/ios/ --plugin https://github.com/americanbible/biblesearch-api-js.git\r\n\r\nIf you want to use this in a non-cordova web app then just include the script appropriately for your application.  It can be easily loaded via require.js with no problems, or just add it via a standard script tag wherever you want.  The script will create an object at plugins.absBiblesearch (which is normal for phonegap).\r\n\r\nYou will also need to get a free api key at http://bibles.org/pages/api/signup.\r\n\r\n## Usage\r\n\r\nIn your javascript:\r\n\r\n\tvar bsearch = plugins.absBiblesearch; // just to make access easier.\r\n\tbsearch.setKey(/*your API key goes here*/); // just do this once in your app initialization\r\n\r\n\t// at this point you are ready to make api calls.\r\n\tif (!bsearch.versionsByLanguage('eng-US', function(data) {\r\n\t\t// data will now contain a JSON object.  To see an example of the content see the api documentation.\r\n        for (var i = 0; i < data.response.versions.length; i++) {\r\n            var version = data.response.versions[i];\r\n            alert(version.version + ': ' + version.name);\r\n        }\r\n    })) {\r\n        alert('error: ' + bsearch.lastError());\r\n    }\r\n\r\n## API & Key\r\n\r\nYou can get additional details on the api at http://bibles.org/pages/api.\r\n\r\n## Comments and Complaints\r\n\r\nIf you have any issues you can let us know by email at mbradshaw@americanbible.org.\r\n\r\n## Changelog\r\n\r\nv1.0.4 - Update for cordova v3 plugin architecture.\r\nv1.0.3 - Fix asynchronous credential issue\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}